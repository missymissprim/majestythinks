<script>
	let mapID = [];
	let map = [];

	let mapName = Array.from(document.querySelectorAll(".map"))

	for(var i = 0; i < mapName.length; i++){
		var name = mapName[i].id;

		mapID.push(name);

		map[i] = L.map(mapID[i], {
			crs: L.CRS.Simple,
			minZoom: -4
		});

	}

	let boundsZ = [];
	let imageZ = [];
	var popup = L.popup();;

	const city = L.divIcon({
		html: `<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 384 512"><!--! Font Awesome Pro 6.2.1 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license (Commercial License) Copyright 2022 Fonticons, Inc. --><path d="M215.7 499.2C267 435 384 279.4 384 192C384 86 298 0 192 0S0 86 0 192c0 87.4 117 243 168.3 307.2c12.3 15.3 35.1 15.3 47.4 0zM192 256c-35.3 0-64-28.7-64-64s28.7-64 64-64s64 28.7 64 64s-28.7 64-64 64z"/></svg>`,
		className: "city",
		iconSize: [20, 20],
		iconAnchor: [10,30],
	});

	const cityMajor = L.divIcon({
		html: `<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 384 512"><!--! Font Awesome Pro 6.2.1 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license (Commercial License) Copyright 2022 Fonticons, Inc. --><path d="M215.7 499.2C267 435 384 279.4 384 192C384 86 298 0 192 0S0 86 0 192c0 87.4 117 243 168.3 307.2c12.3 15.3 35.1 15.3 47.4 0zM192 256c-35.3 0-64-28.7-64-64s28.7-64 64-64s64 28.7 64 64s-28.7 64-64 64z"/></svg>`,
		className: "cityMajor",
		iconSize: [20, 20],
		iconAnchor: [10,30],
	});

	const encounter = L.divIcon({
		html: `<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 512 512"><!--! Font Awesome Pro 6.2.1 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license (Commercial License) Copyright 2022 Fonticons, Inc. --><path d="M256 32c14.2 0 27.3 7.5 34.5 19.8l216 368c7.3 12.4 7.3 27.7 .2 40.1S486.3 480 472 480H40c-14.3 0-27.6-7.7-34.7-20.1s-7-27.8 .2-40.1l216-368C228.7 39.5 241.8 32 256 32zm0 128c-13.3 0-24 10.7-24 24V296c0 13.3 10.7 24 24 24s24-10.7 24-24V184c0-13.3-10.7-24-24-24zm32 224c0-17.7-14.3-32-32-32s-32 14.3-32 32s14.3 32 32 32s32-14.3 32-32z"/></svg>`,
		className: "encounter",
		iconSize: [25, 25],
		iconAnchor: [10, 25],
	});

	const party = L.icon({
		iconUrl: "https://majestythinks.netlify.app/img/party-icon.png",
		iconSize: [30, 30],
		iconAnchor: [15, 30],
	});

	const pinpoint = L.divIcon({
		html: `<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 384 512"><!--! Font Awesome Pro 6.2.1 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license (Commercial License) Copyright 2022 Fonticons, Inc. --><path d="M32 32C32 14.3 46.3 0 64 0H320c17.7 0 32 14.3 32 32s-14.3 32-32 32H290.5l11.4 148.2c36.7 19.9 65.7 53.2 79.5 94.7l1 3c3.3 9.8 1.6 20.5-4.4 28.8s-15.7 13.3-26 13.3H32c-10.3 0-19.9-4.9-26-13.3s-7.7-19.1-4.4-28.8l1-3c13.8-41.5 42.8-74.8 79.5-94.7L93.5 64H64C46.3 64 32 49.7 32 32zM160 384h64v96c0 17.7-14.3 32-32 32s-32-14.3-32-32V384z"/></svg>`,
		className: "pinpoint",
		iconSize: [15, 15],
		iconAnchor: [10, 30],
	});

	const setting = L.divIcon({
		html: `<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 384 512"><!--! Font Awesome Pro 6.2.1 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license (Commercial License) Copyright 2022 Fonticons, Inc. --><path d="M384 192c0 87.4-117 243-168.3 307.2c-12.3 15.3-35.1 15.3-47.4 0C117 435 0 279.4 0 192C0 86 86 0 192 0S384 86 384 192z"/></svg>`,
		className: "setting",
		iconSize: [20, 20],
		iconAnchor: [10, 30],
	});

	const tower = L.divIcon({
		html: `<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 384 512"><!--! Font Awesome Pro 6.2.1 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license (Commercial License) Copyright 2022 Fonticons, Inc. --><path d="M0 204.2V48c0-8.8 7.2-16 16-16H72c8.8 0 16 7.2 16 16V88c0 4.4 3.6 8 8 8h32c4.4 0 8-3.6 8-8V48c0-8.8 7.2-16 16-16h80c8.8 0 16 7.2 16 16V88c0 4.4 3.6 8 8 8h32c4.4 0 8-3.6 8-8V48c0-8.8 7.2-16 16-16h56c8.8 0 16 7.2 16 16V204.2c0 12.1-6.8 23.2-17.7 28.6l-28.6 14.3c-10.8 5.4-17.7 16.5-17.5 28.6C322.2 360.7 336 416 336 416H48s13.8-55.3 15.8-140.2c.3-12.1-6.6-23.2-17.5-28.6L17.7 232.8C6.8 227.4 0 216.3 0 204.2zM176 320h32c8.8 0 16-7.2 16-16V256c0-17.7-14.3-32-32-32s-32 14.3-32 32v48c0 8.8 7.2 16 16 16zM32 448H352c17.7 0 32 14.3 32 32s-14.3 32-32 32H32c-17.7 0-32-14.3-32-32s14.3-32 32-32z"/></svg>`,
		className: "tower",
		iconSize: [17, 17],
		iconAnchor: [7, 20],
	});

	const thumbtack = L.divIcon({
		html: `
			<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 384 512"><!--! Font Awesome Pro 6.2.1 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license (Commercial License) Copyright 2022 Fonticons, Inc. --><path d="M32 32C32 14.3 46.3 0 64 0H320c17.7 0 32 14.3 32 32s-14.3 32-32 32H290.5l11.4 148.2c36.7 19.9 65.7 53.2 79.5 94.7l1 3c3.3 9.8 1.6 20.5-4.4 28.8s-15.7 13.3-26 13.3H32c-10.3 0-19.9-4.9-26-13.3s-7.7-19.1-4.4-28.8l1-3c13.8-41.5 42.8-74.8 79.5-94.7L93.5 64H64C46.3 64 32 49.7 32 32zM160 384h64v96c0 17.7-14.3 32-32 32s-32-14.3-32-32V384z"/></svg>`,
		className: "thumbtack",
		iconSize: [20, 20],
		iconAnchor: [10, 30],
	});

	for (var i = 0; i < mapID.length; i++){
		if (mapID[i] === "adrilos") {
			var bounds = [[0,0], [3072,2732]];
			var image = L.imageOverlay('https://majestythinks.netlify.app/img/Adrilos.jpeg', bounds).addTo(map[i]);

			const cities = L.layerGroup();
			const encounters = L.layerGroup();
			const local = L.layerGroup();
			const godTowers = L.layerGroup();
			const voidGates = L.layerGroup();


			//Locations
			var adenVala = L.marker([1619, 1896], { icon: cityMajor }).addTo(cities).bindTooltip('Aden Vala',{direction: 'top', offset: [0, -20]}).on("click", function onClick(e) { window.location = ('https://majestythinks.netlify.app/path-in-purgatory/locations/aden-vala/');});

			var azvon = L.marker([743, 1530], { icon: cityMajor }).addTo(cities).bindTooltip('Azvon',{direction: 'top', offset: [0, -20]}).on("click", function onClick(e) { window.location = ('https://majestythinks.netlify.app/path-in-purgatory/locations/azvon/');});

			var beldaSil = L.marker([1719, 2340], { icon: setting }).addTo(local).bindTooltip('Belda Sil',{direction: 'top', offset: [0, -20]}).on("click", function onClick(e) { window.location = ('https://majestythinks.netlify.app/path-in-purgatory/locations/aden-vala/');});

			var centrasta = L.marker([520, 1025], { icon: cityMajor }).addTo(cities).bindTooltip('Centrasta',{direction: 'top', offset: [0, -20]}).on("click", function onClick(e) { window.location = ('https://majestythinks.netlify.app/path-in-purgatory/locations/centrasta/');});

			var chasmia = L.marker([1070, 1924], { icon: cityMajor }).addTo(cities).bindTooltip('Chasmia',{direction: 'top', offset: [0, -20]}).on("click", function onClick(e) { window.location = ('https://majestythinks.netlify.app/path-in-purgatory/locations/chasmia/');});

			var denvelle = L.marker([1367, 1882], { icon: city }).addTo(cities).bindTooltip('Denvelle',{direction: 'top', offset: [0, -20]}).on("click", function onClick(e) { window.location = ('https://majestythinks.netlify.app/path-in-purgatory/locations/denvelle/');});

			var dhamAdamas = L.marker([2376, 1392], { icon: cityMajor }).addTo(cities).bindTooltip('Dham Adamas',{direction: 'top', offset: [0, -20]}).on("click", function onClick(e) { window.location = ('https://majestythinks.netlify.app/path-in-purgatory/locations/dham-adamas/');});

			var dhamAuram = L.marker([2536, 2264], { icon: cityMajor }).addTo(cities).bindTooltip('Dham Auram',{direction: 'top', offset: [0, -20]}).on("click", function onClick(e) { window.location = ('https://majestythinks.netlify.app/path-in-purgatory/locations/dham-auram/');});

			var dhamCanas = L.marker([2094, 1858], { icon: city }).addTo(cities).bindTooltip('Dham Canas',{direction: 'top', offset: [0, -20]}).on("click", function onClick(e) { window.location = ('https://majestythinks.netlify.app/path-in-purgatory/locations/dham-canas/');});

			var dinea = L.marker([2324, 1816], { icon: setting }).addTo(local).bindTooltip('Dinea',{direction: 'top', offset: [0, -20]}).on("click", function onClick(e) { window.location = ('https://majestythinks.netlify.app/path-in-purgatory/locations/dinea/');});

			var dualis = L.marker([920, 1896], { icon: setting }).addTo(local).bindTooltip('Dualis Empire',{direction: 'top', offset: [0, -20]}).on("click", function onClick(e) { window.location = ('https://majestythinks.netlify.app/path-in-purgatory/locations/dulas/');});

			var eldrisal = L.marker([516, 1740], { icon: city }).addTo(cities).bindTooltip('Eldrisal',{direction: 'top', offset: [0, -20]}).on("click", function onClick(e) { window.location = ('https://majestythinks.netlify.app/path-in-purgatory/locations/eldrisal/');});

			var endale = L.marker([807, 2076], { icon: city }).addTo(cities).bindTooltip('Endale',{direction: 'top', offset: [0, -20]}).on("click", function onClick(e) { window.location = ('https://majestythinks.netlify.app/path-in-purgatory/locations/endale/');});

			var ethmirin = L.marker([1864, 1860], { icon: city }).addTo(cities).bindTooltip('Ethmirin',{direction: 'top', offset: [0, -20]}).on("click", function onClick(e) { window.location = ('https://majestythinks.netlify.app/path-in-purgatory/locations/frenevid/');});

			var falivar = L.marker([1271, 982], { icon: setting }).addTo(local).bindTooltip('Falivar Desert',{direction: 'top', offset: [0, -20]}).on("click", function onClick(e) { window.location = ('https://majestythinks.netlify.app/path-in-purgatory/locations/falivar-desert/');});

			var feah = L.marker([699, 1722], { icon: city }).addTo(cities).bindTooltip('Feah',{direction: 'top', offset: [0, -20]}).on("click", function onClick(e) { window.location = ('https://majestythinks.netlify.app/path-in-purgatory/locations/feah/');});

			var felindra = L.marker([1879, 2122], { icon: cityMajor }).addTo(cities).bindTooltip('Felindra',{direction: 'top', offset: [0, -20]}).on("click", function onClick(e) { window.location = ('https://majestythinks.netlify.app/path-in-purgatory/locations/felindra/');});

			var frenevid = L.marker([686, 2373], { icon: cityMajor }).addTo(cities).bindTooltip('Frenevid',{direction: 'top', offset: [0, -20]}).on("click", function onClick(e) { window.location = ('https://majestythinks.netlify.app/path-in-purgatory/locations/frenevid/');});

			var gorin = L.marker([702, 1018], { icon: setting }).addTo(local).bindTooltip('Gorin',{direction: 'top', offset: [0, -20]}).on("click", function onClick(e) { window.location = ('https://majestythinks.netlify.app/path-in-purgatory/locations/gorin/');});

			var govar = L.marker([512, 542], { icon: city }).addTo(cities).bindTooltip('Govar',{direction: 'top', offset: [0, -20]}).on("click", function onClick(e) { window.location = ('https://majestythinks.netlify.app/path-in-purgatory/locations/govar/');});

			var hidela = L.marker([1194, 1510], { icon: cityMajor }).addTo(cities).bindTooltip('Hidela',{direction: 'top', offset: [0, -20]}).on("click", function onClick(e) { window.location = ('https://majestythinks.netlify.app/path-in-purgatory/locations/hidela/');});

			var ichivar = L.marker([538, 1321], { icon: city }).addTo(cities).bindTooltip('Ichivar',{direction: 'top', offset: [0, -20]}).on("click", function onClick(e) { window.location = ('https://majestythinks.netlify.app/path-in-purgatory/locations/ichivar/');});

			var lindhaven = L.marker([927, 1690], { icon: cityMajor }).addTo(cities).bindTooltip('Lindhaven',{direction: 'top', offset: [0, -20]}).on("click", function onClick(e) { window.location = ('https://majestythinks.netlify.app/path-in-purgatory/locations/lindhaven/');});

			var loria = L.marker([1703, 1544], { icon: city }).addTo(cities).bindTooltip('Loria',{direction: 'top', offset: [0, -20]}).on("click", function onClick(e) { window.location = ('https://majestythinks.netlify.app/path-in-purgatory/locations/loria/');});

			var nivar = L.marker([867, 1241], { icon: city }).addTo(cities).bindTooltip('Nivar',{direction: 'top', offset: [0, -20]}).on("click", function onClick(e) { window.location = ('https://majestythinks.netlify.app/path-in-purgatory/locations/nivar/');});

			var orinHaas = L.marker([1422, 982], { icon: city }).addTo(cities).bindTooltip('Orin Ha’as',{direction: 'top', offset: [0, -20]}).on("click", function onClick(e) { window.location = ('https://majestythinks.netlify.app/path-in-purgatory/locations/orin-haas/');});

			var portLaska = L.marker([1243, 2192], { icon: cityMajor }).addTo(cities).bindTooltip('Pork Laska',{direction: 'top', offset: [0, -20]}).on("click", function onClick(e) { window.location = ('https://majestythinks.netlify.app/path-in-purgatory/locations/port-laska/');});

			var riverna = L.marker([1154, 2010], { icon: city }).addTo(cities).bindTooltip('Riverna',{direction: 'top', offset: [0, -20]}).on("click", function onClick(e) { window.location = ('https://majestythinks.netlify.app/path-in-purgatory/locations/riverna/');});

			var sanvar = L.marker([795, 1004], { icon: city }).addTo(cities).bindTooltip('Sanvar',{direction: 'top', offset: [0, -20]}).on("click", function onClick(e) { window.location = ('https://majestythinks.netlify.app/path-in-purgatory/locations/Sanvar/');});

			var spenwald = L.marker([611, 1916], { icon: cityMajor }).addTo(cities).bindTooltip('Spenwald',{direction: 'top', offset: [0, -20]}).on("click", function onClick(e) { window.location = ('https://majestythinks.netlify.app/path-in-purgatory/locations/Spenwald/');});

			var wisderne = L.marker([1405, 1657], { icon: city }).addTo(cities).bindTooltip('Wisderne',{direction: 'top', offset: [0, -20]}).on("click", function onClick(e) { window.location = ('https://majestythinks.netlify.app/path-in-purgatory/locations/wisderne/');});

			var yonvar = L.marker([908, 648], { icon: city }).addTo(cities).bindTooltip('Yonvar',{direction: 'top', offset: [0, -20]}).on("click", function onClick(e) { window.location = ('https://majestythinks.netlify.app/path-in-purgatory/locations/Yonvar/');});


			//Encounters
			var encounter1 = L.marker([2362, 1392], { icon: encounter }).addTo(encounters).bindTooltip('Void Walker Activity',{direction: 'top', offset: [3, -20]}); //Dham Adamas
			var encounter2 = L.marker([1865, 2122], { icon: encounter }).addTo(encounters).bindTooltip('Void Walker Activity',{direction: 'top', offset: [3, -20]}); //Felindra
			var encounter3 = L.marker([524, 1321], { icon: encounter }).addTo(encounters).bindTooltip('Tiefling Genocide<br>Void Walker Activity',{direction: 'top', offset: [3, -20]}); //Ichivar
			var encounter4 = L.marker([913, 1690], { icon: encounter }).addTo(encounters).bindTooltip('Void Walker Activity',{direction: 'top', offset: [3, -20]}); //Lindhaven
			var encounter5 = L.marker([1229, 2192], { icon: encounter }).addTo(encounters).bindTooltip('Void Walker Activity',{direction: 'top', offset: [3, -20]}); //Port Laska
			var encounter6 = L.marker([1140, 2010], { icon: encounter }).addTo(encounters).bindTooltip('Gorin Incursion<br>Void Walker Activity',{direction: 'top', offset: [3, -20]}); //Riverna
			var encounter7 = L.marker([781, 1004], { icon: encounter }).addTo(encounters).bindTooltip('Void Walker Activity',{direction: 'top', offset: [3, -20]}); //Sanvar
			var encounter8 = L.marker([597, 1916], { icon: encounter }).addTo(encounters).bindTooltip('Conflict<br>Void Walker Activity',{direction: 'top', offset: [3, -20]}); //Spenwald


			//God Towers
			var godTower1 = L.marker([1719, 2340], { icon: tower }).addTo(godTowers).bindTooltip('God Tower',{direction: 'top', offset: [3, -20]}); //Belda Sil
			var godTower2 = L.marker([520, 1025], { icon: tower }).addTo(godTowers).bindTooltip('God Tower',{direction: 'top', offset: [3, -20]}); //Centrasta
			var godTower3 = L.marker([1722, 599], { icon: tower }).addTo(godTowers).bindTooltip('Sky Pillar',{direction: 'top', offset: [3, -20]}); //Falivar Desert
			var godTower4 = L.marker([1108, 1807], { icon: tower }).addTo(godTowers).bindTooltip('Heaven’s Tower',{direction: 'top', offset: [3, -20]}); //Heaven’s Tower
			var godTower5 = L.marker([1481, 1644], { icon: tower }).addTo(godTowers).bindTooltip('Sealed Paradise',{direction: 'top', offset: [3, -20]}); //Sealed Paradise

			var nameless = L.marker([1865, 2195], { icon: party, draggable: true }).addTo(map[i]).bindTooltip('The Nameless Ones',{direction: 'top', offset: [0, -20]});

			// Void Gates
			var voidGate1 = L.marker([686, 2373], { icon: thumbtack }).addTo(voidGates).bindTooltip('Void Gate',{direction: 'top', offset: [0, -20]}); //Frenevid
			var voidGate2 = L.marker([2536, 2264], { icon: thumbtack }).addTo(voidGates).bindTooltip('Void Gate',{direction: 'top', offset: [0, -20]}); //Dham Auram
			var voidGate3 = L.marker([1619, 1896], { icon: thumbtack }).addTo(voidGates).bindTooltip('Void Gate',{direction: 'top', offset: [0, -20]});	//AdenVala		

			var baseLayers = {

			};

			//Default Layers
			map[i].addLayer(encounters);
			map[i].addLayer(godTowers);
			map[i].addLayer(voidGates);

			var overlayMaps = {
			"Cities": cities,
				"Encounters": encounters,
				"God Towers": godTowers,
				"Locations": local,
				"Void Gates": voidGates
			};

			var layerControl = L.control.layers(baseLayers, overlayMaps).addTo(map[i]);

			var towerLatLngs = [godTower1.getLatLng(), godTower3.getLatLng(), godTower2.getLatLng(), godTower4.getLatLng()];
			var voidLatLngs = [voidGate1.getLatLng(), voidGate2.getLatLng(), voidGate3.getLatLng()];

			var towerPolygon = L.polygon(towerLatLngs, {color: 'var(--blue)'}).addTo(godTowers);
			var voidPolygon = L.polygon(voidLatLngs, {color: 'var(--orange)'}).addTo(voidGates);

			map[i].fitBounds(bounds);
		}


		else if (mapID[i] === "faerun") {
			var bounds = [[0,0], [6600,10200]];
			var image = L.imageOverlay('https://www.worldanvil.com/uploads/maps/624c3909d3751d38fb230cf9ce37f1d3.jpg', bounds).addTo(map[i]);

			//Locations
			var anguisConda = L.marker([1807, 1675], { icon: setting }).addTo(map[i]).bindTooltip('Anguis’Conda',{direction: 'top', offset: [0, -20]});
			var candlekeep = L.marker([1837, 5190], { icon: tower }).addTo(map[i]).bindTooltip('Candlekeep',{direction: 'top', offset: [0, -20]});
			var heavensBreath = L.marker([4636, 4702], { icon: city }).addTo(map[i]).bindTooltip('Heaven’s Breath',{direction: 'top', offset: [0, -20]});
			var luskan = L.marker([5704, 3943], { icon: cityMajor }).addTo(map[i]).bindTooltip('Luskan',{direction: 'top', offset: [0, -20]});
			var neverwinter = L.marker([5243, 4064], { icon: cityMajor }).addTo(map[i]).bindTooltip('Neverwinter',{direction: 'top', offset: [0, -20]});
			var portLlast = L.marker([5370, 4000], { icon: city }).addTo(map[i]).bindTooltip('Port Llast',{direction: 'top', offset: [0, -20]});
			var sanMateo = L.marker([3289, 1920], { icon: city }).addTo(map[i]).bindTooltip('San’Mateo',{direction: 'top', offset: [0, -20]});
			var triboar = L.marker([5135, 4753], { icon: cityMajor }).addTo(map[i]).bindTooltip('Triboar',{direction: 'top', offset: [0, -20]});
			var waterdeep = L.marker([4148, 4608], { icon: cityMajor }).addTo(map[i]).bindTooltip('Waterdeep',{direction: 'top', offset: [0, -20]});
			var westridge = L.marker([4914, 4746], { icon: city }).addTo(map[i]).bindTooltip('Westridge',{direction: 'top', offset: [0, -20]});

			var seven = L.marker([5704, 3943], { icon: party, draggable: true }).addTo(map[i]).bindTooltip('The Generic Seven',{direction: 'top', offset: [0, -20]});

			map[i].fitBounds(bounds);
		}


		 else if (mapID[i] === "icewindDale") {
			bounds = [[0,0], [4215,6000]];
			image = L.imageOverlay('https://media.dndbeyond.com/compendium-images/idrotf/7Av7Gi2DxDtdzZPt/map-poster.jpg', bounds).addTo(map[i]);

			var seven = L.marker([290, 1235], { icon: party, draggable: true }).addTo(map[i]).bindTooltip('The Generic Seven',{direction: 'top', offset: [0, -20]});

			map[i].fitBounds(bounds);
		}

		else if (mapID[i] === "luskan") {
			bounds = [[0,0], [692,849]];
			image = L.imageOverlay('https://www.dndbeyond.com/attachments/1/562/scag02-29.png', bounds).addTo(map[i]);

			map[i].fitBounds(bounds);
		}

		else if (mapID[i] === "motherhorn") {
			bounds = [[0,0], [5700,4200]];
			image = L.imageOverlay('https://media.dndbeyond.com/compendium-images/twbtw/JtUXxjur9QWtb7E3/map-4.2-motherhorn.jpg', bounds).addTo(map[i]);

			var cursed = L.marker([4712, 2514], { icon: party, draggable: true }).addTo(map[i]).bindTooltip('The Cursed Keepers',{direction: 'top', offset: [0, -20]});

			map[i].fitBounds(bounds);
		}

		else if (mapID[i] === "palaceHeartsDesireLower") {
			bounds = [[0,0], [5700,4200]];
			image = L.imageOverlay('https://media.dndbeyond.com/compendium-images/twbtw/JtUXxjur9QWtb7E3/map-5.1-palace-lower.jpg', bounds).addTo(map[i]);

			var cursed = L.marker([550, 1880], { icon: party, draggable: true }).addTo(map[i]).bindTooltip('The Cursed Keepers',{direction: 'top', offset: [0, -20]});

			map[i].fitBounds(bounds);
		}

		else if (mapID[i] === "palaceHeartsDesireUpper") {
			bounds = [[0,0], [5700,4200]];
			image = L.imageOverlay('https://media.dndbeyond.com/compendium-images/twbtw/JtUXxjur9QWtb7E3/map-5.2-palace-upper.jpg', bounds).addTo(map[i]);

			var cursed = L.marker([4712, 2514], { icon: party, draggable: true }).addTo(map[i]).bindTooltip('The Cursed Keepers',{direction: 'top', offset: [0, -20]});

			map[i].fitBounds(bounds);
		}

		else if (mapID[i] === "portLlast") {
			bounds = [[0,0], [642,640]];
			image = L.imageOverlay('https://dmcapn.files.wordpress.com/2018/06/fort_hooktongue.jpg', bounds).addTo(map[i]);

			map[i].fitBounds(bounds);
		}

		else if (mapID[i] === "velkynvelve") {
			bounds = [[0,0], [3000,2084]];
			image = L.imageOverlay('https://www.dndbeyond.com/attachments/2/430/01-04.jpg', bounds).addTo(map[i]);

			var prisoner = L.marker([1904, 1684], { icon: party, draggable: true }).addTo(map[i]).bindTooltip('The Prisoners',{direction: 'top', offset: [0, -20]});

			map[i].fitBounds(bounds);

		}

		map[i].on('click', onMapClick);
	}

	function onMapClick(e) {
			popup
			.setLatLng(e.latlng)
			.setContent(e.latlng.toString())
			.openOn(this);	
	}
</script>
