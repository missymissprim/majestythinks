<script>
	let mapName = document.getElementsByClassName("map")[0].id;
	let mapID = mapName.toString();

	var map = L.map(mapID, {
			crs: L.CRS.Simple,
			minZoom: -4
		});;

	var bounds;
	var image;

	const city = L.divIcon({
		html: `
			<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 384 512"><!--! Font Awesome Pro 6.2.1 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license (Commercial License) Copyright 2022 Fonticons, Inc. --><path d="M215.7 499.2C267 435 384 279.4 384 192C384 86 298 0 192 0S0 86 0 192c0 87.4 117 243 168.3 307.2c12.3 15.3 35.1 15.3 47.4 0zM192 256c-35.3 0-64-28.7-64-64s28.7-64 64-64s64 28.7 64 64s-28.7 64-64 64z"/></svg>`,
		className: "city",
		iconSize: [20, 20],
		iconAnchor: [10,30],
	});

	const encounter = L.divIcon({
		html: `
			<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 512 512"><!--! Font Awesome Pro 6.2.1 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license (Commercial License) Copyright 2022 Fonticons, Inc. --><path d="M256 32c14.2 0 27.3 7.5 34.5 19.8l216 368c7.3 12.4 7.3 27.7 .2 40.1S486.3 480 472 480H40c-14.3 0-27.6-7.7-34.7-20.1s-7-27.8 .2-40.1l216-368C228.7 39.5 241.8 32 256 32zm0 128c-13.3 0-24 10.7-24 24V296c0 13.3 10.7 24 24 24s24-10.7 24-24V184c0-13.3-10.7-24-24-24zm32 224c0-17.7-14.3-32-32-32s-32 14.3-32 32s14.3 32 32 32s32-14.3 32-32z"/></svg>`,
		className: "encounter",
		iconSize: [20, 20],
		iconAnchor: [10,25],
	});

	const pinpoint = L.divIcon({
		html: `
			<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 384 512"><!--! Font Awesome Pro 6.2.1 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license (Commercial License) Copyright 2022 Fonticons, Inc. --><path d="M32 32C32 14.3 46.3 0 64 0H320c17.7 0 32 14.3 32 32s-14.3 32-32 32H290.5l11.4 148.2c36.7 19.9 65.7 53.2 79.5 94.7l1 3c3.3 9.8 1.6 20.5-4.4 28.8s-15.7 13.3-26 13.3H32c-10.3 0-19.9-4.9-26-13.3s-7.7-19.1-4.4-28.8l1-3c13.8-41.5 42.8-74.8 79.5-94.7L93.5 64H64C46.3 64 32 49.7 32 32zM160 384h64v96c0 17.7-14.3 32-32 32s-32-14.3-32-32V384z"/></svg>`,
		className: "pinpoint",
		iconSize: [20, 20],
		iconAnchor: [10,30],
	});

	const setting = L.divIcon({
		html: `
			<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 384 512"><!--! Font Awesome Pro 6.2.1 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license (Commercial License) Copyright 2022 Fonticons, Inc. --><path d="M384 192c0 87.4-117 243-168.3 307.2c-12.3 15.3-35.1 15.3-47.4 0C117 435 0 279.4 0 192C0 86 86 0 192 0S384 86 384 192z"/></svg>`,
		className: "setting",
		iconSize: [20, 20],
		iconAnchor: [10,30],
	});

	const thumbtack = L.divIcon({
		html: `
			<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 384 512"><!--! Font Awesome Pro 6.2.1 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license (Commercial License) Copyright 2022 Fonticons, Inc. --><path d="M32 32C32 14.3 46.3 0 64 0H320c17.7 0 32 14.3 32 32s-14.3 32-32 32H290.5l11.4 148.2c36.7 19.9 65.7 53.2 79.5 94.7l1 3c3.3 9.8 1.6 20.5-4.4 28.8s-15.7 13.3-26 13.3H32c-10.3 0-19.9-4.9-26-13.3s-7.7-19.1-4.4-28.8l1-3c13.8-41.5 42.8-74.8 79.5-94.7L93.5 64H64C46.3 64 32 49.7 32 32zM160 384h64v96c0 17.7-14.3 32-32 32s-32-14.3-32-32V384z"/></svg>`,
		className: "thumbtack",
		iconSize: [20, 20],
		iconAnchor: [10,30],
	});


	if (mapID === "faerun") {
		bounds = [[0,0], [6600,10200]];
		image = L.imageOverlay('https://media.wizards.com/2015/images/dnd/resources/Sword-Coast-Map_HighRes.jpg', bounds).addTo(map); 
	}

	else if (mapID === "adrilos") {
		bounds = [[0,0], [3072,2732]];
		image = L.imageOverlay('https://majestythinks.netlify.app/img/Adrilos.jpeg', bounds).addTo(map);

		const cities = L.layerGroup();

		var chasmia = L.marker([1070, 1924], { icon: city }).addTo(cities);
		var dhamAuram = L.marker([2536, 2264], { icon: city }).addTo(cities);
		var frenevid = L.marker([686, 2373], { icon: city }).addTo(cities);

		var encounter1 = L.marker([913, 1691], { icon: encounter }).bindTooltip('Void Walker Activity',{direction: 'top', offset: [0, -20]});

		var godTower1 = L.marker([1719, 2340], { icon: pinpoint }).bindTooltip('God Tower',{direction: 'top', offset: [0, -20]});

		var voidGate1 = L.marker([686, 2373], { icon: thumbtack }).bindTooltip('Void Gate',{direction: 'top', offset: [0, -20]});
		var voidGate2 = L.marker([2536, 2264], { icon: thumbtack }).bindTooltip('Void Gate',{direction: 'top', offset: [0, -20]});
		var voidGate3 = L.marker([1619, 1896], { icon: thumbtack }).bindTooltip('Void Gate',{direction: 'top', offset: [0, -20]});

		const godTowers = L.layerGroup([godTower1]);
		const voidGates = L.layerGroup([voidGate1, voidGate2, voidGate3]);


		var baseLayers = {

		};

		map.addLayer(cities);


		var overlayMaps = {
		"Cities": cities,
			"God Towers": godTowers,
			"Void Gates": voidGates
		};

		var layerControl = L.control.layers(baseLayers, overlayMaps).addTo(map);

	}

	map.fitBounds(bounds);

	var popup = L.popup();
	function onMapClick(e) {
		popup
		.setLatLng(e.latlng)
		.setContent("You clicked the map at " + e.latlng.toString())
		.openOn(map);
	}
	map.on('click', onMapClick);
</script>
